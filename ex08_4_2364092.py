# -*- coding: utf-8 -*-
"""ex08_4_2364092

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19DtORXjTBgJTTOoIRCQ8bTecnU3iY6Ik
"""

def main():       #main()関数の定義
  global num1,num2,num3  #3つのグローバル変数の定義
  num1,num2,num3=0,0,0   #繰り返し数の初期値は0
  while True:            #条件を満たす時成立のループ
    n = int(input("\n正数nの値を入力してください（負の数の入力で終了）n＝"))#nに自然数を代入
    if n > 0:        #nが整数の時
      print("二重再帰：計算結果：",fibo_w(n),"呼び出し回数：",num1)#二重再帰関数の呼び出し
      print("末尾再帰：計算結果：",fibo_m(n-1),"呼び出し回数：",num2)#末尾再帰関数の呼び出し
      print("繰り返し：計算結果：",fibo_tr(n),"繰り返し回数：",num3)#繰り返し関数の呼び出し
    else:            #nが0または負の値の時
      print("プログラムを終了します")  #メッセージを出力
      break         #プログラムを終了
def fibo_w(n):#二重再帰関数
  global num1 #グローバル変数num1
  if n ==0:   #nの値が1の時
    num1+= 1  #呼び出し回数＋1回
    return 0  #値を返さない（0を返す）
  elif n == 1:#nの値が1の時
    num1+= 1  #呼び出し回数＋1回
    return 1  #1を返す
  else:       #nが0でも1でもない時
    num1+= 1  #呼び出し回数＋1回
    return fibo_w(n-1)+fibo_w(n-2) #fibo_w(n-1)+fibo_w(n-2)を返す

def fibo_m(n,a1 = 1,a2=0):#末尾再帰関数
  global num2  #グローバル変数num2
  if n < 1:    #nが1未満の時
    num2 +=1   #呼び出し回数＋1回
    return a1  #a1を返す
  num2 += 1    #呼び出し回数＋1回
  return fibo_m(n-1,a1+a2,a1) #fibo_m(n-1,a1+a2,a1)を返す

def fibo_tr(n):#ループ関数
  global num3  #グローバル変数num3
  a,b = 0,1    #a,b=0,1と初期値設定
  if n == 0:   #nの値が0の時
    return a   #aを返す
  elif n == 1: #nの値が1の時
    return b   #bを返す
  else:        #nの値が0でも1でもない時
    for i in range(n-1):#n-1までのiに対して
      a,b = b,a+b       #aにbの値、bにa+bの値を代入
      num3 +=1          #繰り返し回数＋1回
    return b            #bに値を返す


main()      #main()関数の実行